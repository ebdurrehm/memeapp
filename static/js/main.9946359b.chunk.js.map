{"version":3,"sources":["Header.js","Form.js","Generator.js","App.js","reportWebVitals.js","index.js"],"names":["Header","src","alt","Form","props","className","onSubmit","handleClick","type","placeholder","name","value","firstText","onChange","handleChange","secondText","class","Generator","id","onClick","downloadPic","randomImage","App","state","imgs","bind","event","target","this","setState","preventDefault","index","Math","floor","random","length","console","log","url","html2canvas","document","getElementsByClassName","useCORS","then","canvas","imageURL","toDataURL","a","createElement","href","download","click","fetch","response","json","memes","data","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0PAUeA,MARf,WACI,OAAO,mCACH,qBAAKC,IAAI,gFAAgFC,IAAI,SAC3F,wDCcKC,MAjBf,SAAcC,GACV,OACA,uBAAMC,UAAU,OAAOC,SAAUF,EAAMG,YAAvC,UACA,uBAAOC,KAAK,OAAOC,YAAY,mBAC9BC,KAAK,YAAYC,MAAOP,EAAMQ,UAC9BC,SAAUT,EAAMU,eAEf,uBAAON,KAAK,OAAOC,YAAY,oBAC/BC,KAAK,aAAaC,MAAOP,EAAMW,WAC/BF,SAAUT,EAAMU,eAEhB,mCAAQ,mBAAGE,MAAM,kBAAkB,cAAY,SAA/C,eCISC,MAjBf,SAAoBb,GAChB,OAAQ,gCACJ,qBAAKC,UAAU,YAAf,SACA,qBAAKA,UAAU,SAAf,SACA,yBAAQa,GAAI,OAAOC,QAASf,EAAMgB,YAAlC,UAA+C,mBAAGJ,MAAM,iBAAiB,cAAY,SAArF,eAIA,sBAAKX,UAAU,OAAf,UACA,oBAAIA,UAAU,YAAd,SAA2BD,EAAMQ,YAC/B,oBAAIP,UAAU,aAAd,SAA4BD,EAAMW,aAClC,qBAAKd,IAAKG,EAAMiB,YAAanB,IAAI,iB,gBCsF5BoB,E,kDArFb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXX,UAAU,GACVG,WAAW,GACXS,KAAM,GACNH,YAAa,IAEf,EAAKP,aAAe,EAAKA,aAAaW,KAAlB,gBACpB,EAAKlB,YAAc,EAAKA,YAAYkB,KAAjB,gBACnB,EAAKL,YAAc,EAAKA,YAAYK,KAAjB,gBAXR,E,gDAeb,SAAaC,GACX,MAAsBA,EAAMC,OAArBjB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MACbiB,KAAKC,SAAL,eACGnB,EAAMC,M,yBAKX,SAAYe,GACVA,EAAMI,iBAEL,IAAMC,EAAMC,KAAKC,MAAMD,KAAKE,SAASN,KAAKL,MAAMC,KAAKW,QACrDC,QAAQC,IAAIT,KAAKL,MAAMC,KAAKO,GAAOO,KACnCV,KAAKC,SAAS,CACZR,YAAaO,KAAKL,MAAMC,KAAKO,GAAOO,Q,yBAKzC,WACEC,IAAYC,SAASC,uBAAuB,QAAQ,GAAI,CACtDC,SAAS,IACRC,MAAK,SAAUC,GAChB,IAAIC,EAAWD,EAAOE,UAAU,aAC5BC,EAAIP,SAASQ,cAAc,KAC/BD,EAAEE,KAAOJ,EACTE,EAAEG,SAAWL,EACbE,EAAEI,a,+BAMN,WAAoB,IAAD,OAChBC,MAAM,qCAAqCT,MAAK,SAAAU,GAAQ,OAAEA,EAASC,UAAQX,MAAK,SAAAU,GAC9E,IAAOE,EAASF,EAASG,KAAlBD,MAEP,EAAK1B,SAAS,CACZL,KAAM+B,S,oBAQb,WAEE,OAAQ,gCACN,cAAC,EAAD,IACA,cAAC,EAAD,CAAMzC,aAAcc,KAAKd,aACpBP,YAAaqB,KAAKrB,YACbK,UAAWgB,KAAKL,MAAMX,UACtBG,WAAYa,KAAKL,MAAMR,aAGjC,cAAC,EAAD,CACEM,YAAaO,KAAKL,MAAMF,YACxBD,YAAaQ,KAAKR,YAClBR,UAAWgB,KAAKL,MAAMX,UACtBG,WAAYa,KAAKL,MAAMR,oB,GA5Eb0C,IAAMC,WCCTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7B,SAAS8B,eAAe,SAM1BX,M","file":"static/js/main.9946359b.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction Header(){\r\n    return(<header>\r\n        <img src=\"https://www.pngall.com/wp-content/uploads/2016/06/Forever-Alone-PNG-Image.png\" alt=\"Logo\"/>\r\n          <h1>Meme Generator App</h1>\r\n        </header>)\r\n}\r\n\r\n\r\nexport default Header","\r\n\r\nfunction Form(props){\r\n    return(\r\n    <form className=\"form\" onSubmit={props.handleClick}>\r\n    <input type=\"text\" placeholder=\"Write first text\"\r\n     name=\"firstText\" value={props.firstText} \r\n     onChange={props.handleChange} />\r\n     \r\n      <input type=\"text\" placeholder=\"Write second text\" \r\n      name=\"secondText\" value={props.secondText} \r\n      onChange={props.handleChange} />\r\n     \r\n      <button><i class=\"fa fa-picture-o\" aria-hidden=\"true\"></i> Load</button>\r\n      \r\n\r\n\r\n    </form>)\r\n}\r\nexport default Form","function Generator (props){\r\n    return (<div>\r\n        <div className=\"container\">\r\n        <div className=\"center\">\r\n        <button id= \"save\" onClick={props.downloadPic}><i class=\"fa fa-floppy-o\" aria-hidden=\"true\"></i> Save</button>\r\n        </div>\r\n        </div>\r\n        \r\n        <div className=\"meme\">\r\n        <h2 className=\"firstText\">{props.firstText}</h2>\r\n          <h2 className=\"secondText\">{props.secondText}</h2>\r\n          <img src={props.randomImage} alt=\"error\"/>\r\n          </div>\r\n          </div>\r\n\r\n    )\r\n}\r\nexport default Generator","\nimport './App.css';\nimport Header from './Header';\nimport Form from './Form';\nimport Generator from './Generator';\n//import html2canvas method for creting image from html content\nimport html2canvas from 'html2canvas';\n\n\nimport React from \"react\"\n\nclass App extends React.Component{\n  constructor(){\n    super()\n\n    this.state = {\n      firstText:\"\",\n      secondText:\"\",\n      imgs: [],\n      randomImage: \"\"\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.downloadPic = this.downloadPic.bind(this);\n  }\n\n//update all input typing dynimically to state\n  handleChange(event){\n    const {name, value} = event.target;\n    this.setState({\n      [name]:value\n    })\n  }\n\n//update random api image to randomImage state prop\n  handleClick(event){\n    event.preventDefault();\n\n     const index=Math.floor(Math.random()*this.state.imgs.length);\n     console.log(this.state.imgs[index].url)\n     this.setState({\n       randomImage: this.state.imgs[index].url\n     })\n  }\n\n  // convert html content to image and download\n  downloadPic(){\n    html2canvas(document.getElementsByClassName(\"meme\")[0], {\n      useCORS: true,\n    }).then(function (canvas) {\n      var imageURL = canvas.toDataURL(\"image/png\");\n      let a = document.createElement(\"a\");\n      a.href = imageURL;\n      a.download = imageURL;\n      a.click();\n    });\n  }\n          \n     \n//fetch data from API\n  componentDidMount(){\n     fetch(\"https://api.imgflip.com/get_memes\").then(response=>response.json()).then(response=>{\n       const {memes} = response.data;\n   \n       this.setState({\n         imgs: memes\n       })\n\n     })\n\n  }\n\n \n  render(){\n    //rendering jsx \n    return (<div>\n      <Header/>\n      <Form handleChange={this.handleChange} \n           handleClick={this.handleClick} \n                firstText={this.state.firstText}\n                secondText={this.state.secondText} \n                />\n     \n      <Generator  \n        randomImage={this.state.randomImage}\n        downloadPic={this.downloadPic}\n        firstText={this.state.firstText}\n        secondText={this.state.secondText}\n      />\n    </div>)\n\n  }\n\n\n\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}